// Generated by Apple Swift version 4.0.3 (swiftlang-900.0.74.1 clang-900.0.39.2)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_attribute(external_source_symbol)
# define SWIFT_STRINGIFY(str) #str
# define SWIFT_MODULE_NAMESPACE_PUSH(module_name) _Pragma(SWIFT_STRINGIFY(clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in=module_name, generated_declaration))), apply_to=any(function, enum, objc_interface, objc_category, objc_protocol))))
# define SWIFT_MODULE_NAMESPACE_POP _Pragma("clang attribute pop")
#else
# define SWIFT_MODULE_NAMESPACE_PUSH(module_name)
# define SWIFT_MODULE_NAMESPACE_POP
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <objc/NSObject.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus) || __cplusplus < 201103L
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR __attribute__((enum_extensibility(open)))
# else
#  define SWIFT_ENUM_ATTR
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name) enum _name : _type _name; enum SWIFT_ENUM_ATTR SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME) SWIFT_ENUM(_type, _name)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if __has_feature(modules)
@import Foundation;
@import CoreGraphics;
@import UIKit;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

SWIFT_MODULE_NAMESPACE_PUSH("ZHExtensions")

@interface NSAttributedString (SWIFT_EXTENSION(ZHExtensions))
/// Set indentation (left padding) of self
/// \param text text
///
/// \param val padding value
///
///
/// returns:
/// new attributed string
+ (NSAttributedString * _Nonnull)indentStringWithText:(NSString * _Nonnull)text val:(CGFloat)val SWIFT_WARN_UNUSED_RESULT SWIFT_DEPRECATED_OBJC("Swift method 'NSAttributedString.indentString(text:val:)' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
@end


@interface UIButton (SWIFT_EXTENSION(ZHExtensions))
/// If you have set an image in self, this will try to center both titleLabel
/// and imageView
/// \param padding padding between btn and imageView
///
- (void)centerVerticallyWithPadding:(CGFloat)padding SWIFT_DEPRECATED_OBJC("Swift method 'UIButton.centerVertically(padding:)' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
@end






@interface UIColor (SWIFT_EXTENSION(ZHExtensions))
+ (UIColor * _Nonnull)hexStringToUIColorWithHex:(NSString * _Nonnull)hex SWIFT_WARN_UNUSED_RESULT SWIFT_DEPRECATED_OBJC("Swift method 'UIColor.hexStringToUIColor(hex:)' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
@end

@class UIViewController;

@interface UIStoryboard (SWIFT_EXTENSION(ZHExtensions))
+ (UIViewController * _Nonnull)named:(NSString * _Nonnull)storyboardName vc:(NSString * _Nonnull)vc SWIFT_WARN_UNUSED_RESULT SWIFT_DEPRECATED_OBJC("Swift method 'UIStoryboard.named(_:vc:)' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
@end






@interface UIView (SWIFT_EXTENSION(ZHExtensions))
/// show or hide current view
/// \param show show or hide
///
/// \param animated animated
///
- (void)showSelfWithShow:(BOOL)show animated:(BOOL)animated SWIFT_DEPRECATED_OBJC("Swift method 'UIView.showSelf(show:animated:)' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
/// Root: show or hide current view
- (void)showSelfWithShow:(BOOL)show animated:(BOOL)animated animations:(void (^ _Nonnull)(void))animations completion:(void (^ _Nonnull)(BOOL))completion SWIFT_DEPRECATED_OBJC("Swift method 'UIView.showSelf(show:animated:animations:completion:)' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
@end


@interface UIView (SWIFT_EXTENSION(ZHExtensions))
- (void)addBlurView SWIFT_DEPRECATED_OBJC("Swift method 'UIView.addBlurView()' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
- (void)addOnTopMotionEffectWithRelativeValue:(float)relativeValue SWIFT_DEPRECATED_OBJC("Swift method 'UIView.addOnTopMotionEffect(relativeValue:)' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
- (void)addBelowMotionEffectWithRelativeValue:(float)relativeValue SWIFT_DEPRECATED_OBJC("Swift method 'UIView.addBelowMotionEffect(relativeValue:)' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
@end


@interface UIView (SWIFT_EXTENSION(ZHExtensions))
/// Pin four edges to superview
- (void)constraintEdgesTo:(UIView * _Nonnull)to SWIFT_DEPRECATED_OBJC("Swift method 'UIView.constraintEdges(to:)' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
- (void)widthConstraintWithWidth:(CGFloat)width SWIFT_DEPRECATED_OBJC("Swift method 'UIView.widthConstraint(width:)' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
- (void)heightConstraintWithHeight:(CGFloat)height SWIFT_DEPRECATED_OBJC("Swift method 'UIView.heightConstraint(height:)' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
- (void)equalWidthToParentWithParent:(UIView * _Nonnull)parent SWIFT_DEPRECATED_OBJC("Swift method 'UIView.equalWidthToParent(parent:)' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
- (void)equalHeightToParentWithParent:(UIView * _Nonnull)parent SWIFT_DEPRECATED_OBJC("Swift method 'UIView.equalHeightToParent(parent:)' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
- (void)centerXToParentWithParent:(UIView * _Nonnull)parent SWIFT_DEPRECATED_OBJC("Swift method 'UIView.centerXToParent(parent:)' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
- (void)centerYToParentWithParent:(UIView * _Nonnull)parent SWIFT_DEPRECATED_OBJC("Swift method 'UIView.centerYToParent(parent:)' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
- (void)constraintPinToTopWithParent:(UIView * _Nonnull)parent SWIFT_DEPRECATED_OBJC("Swift method 'UIView.constraintPinToTop(parent:)' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
- (void)constraintPinToLeadingWithParent:(UIView * _Nonnull)parent SWIFT_DEPRECATED_OBJC("Swift method 'UIView.constraintPinToLeading(parent:)' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
- (void)constraintPinToBottomWithParent:(UIView * _Nonnull)parent SWIFT_DEPRECATED_OBJC("Swift method 'UIView.constraintPinToBottom(parent:)' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
- (void)constraintPinToTrailingWithParent:(UIView * _Nonnull)parent SWIFT_DEPRECATED_OBJC("Swift method 'UIView.constraintPinToTrailing(parent:)' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
@end




@interface UIViewController (SWIFT_EXTENSION(ZHExtensions))
/// Present UIActivityViewController
/// \param activityItems any item
///
/// \param sender iPad only, the control you click to present
///
- (void)presentUIActivityViewControllerWithActivityItems:(NSArray * _Nonnull)activityItems sender:(id _Nullable)sender SWIFT_DEPRECATED_OBJC("Swift method 'UIViewController.presentUIActivityViewController(activityItems:sender:)' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
@end

@class UIPresentationController;

@interface UIViewController (SWIFT_EXTENSION(ZHExtensions)) <UIPopoverPresentationControllerDelegate>
- (void)presentPopoverWith:(UIViewController * _Nonnull)vc sender:(id _Nonnull)sender SWIFT_DEPRECATED_OBJC("Swift method 'UIViewController.presentPopover(with:sender:)' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
- (UIModalPresentationStyle)adaptivePresentationStyleForPresentationController:(UIPresentationController * _Nonnull)controller SWIFT_WARN_UNUSED_RESULT;
@end


@interface UIWindow (SWIFT_EXTENSION(ZHExtensions))
- (void)transitionRootTo:(UIViewController * _Nonnull)vc SWIFT_DEPRECATED_OBJC("Swift method 'UIWindow.transitionRootTo(_:)' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
- (void)transitionRootTo:(UIViewController * _Nonnull)vc completion:(void (^ _Nonnull)(BOOL))completion SWIFT_DEPRECATED_OBJC("Swift method 'UIWindow.transitionRootTo(_:completion:)' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
@end













@class NSNumber;

@interface NSUserDefaults (SWIFT_EXTENSION(ZHExtensions))
/// <code>NSNumber</code> representation of a user default
- (NSNumber * _Nullable)numberForKey:(NSString * _Nonnull)key SWIFT_WARN_UNUSED_RESULT SWIFT_DEPRECATED_OBJC("Swift method 'UserDefaults.numberForKey(_:)' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
- (id _Nullable)objectForKeyedSubscript:(NSString * _Nonnull)key SWIFT_WARN_UNUSED_RESULT SWIFT_DEPRECATED_OBJC("Swift subscript 'UserDefaults.subscript(_:)' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
- (void)setObject:(id _Nullable)newValue forKeyedSubscript:(NSString * _Nonnull)key SWIFT_DEPRECATED_OBJC("Swift subscript 'UserDefaults.subscript(_:)' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
/// Returns <code>true</code> if <code>key</code> exists
- (BOOL)hasKey:(NSString * _Nonnull)key SWIFT_WARN_UNUSED_RESULT SWIFT_DEPRECATED_OBJC("Swift method 'UserDefaults.hasKey(_:)' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
/// Removes value for <code>key</code>
- (void)remove:(NSString * _Nonnull)key SWIFT_DEPRECATED_OBJC("Swift method 'UserDefaults.remove(_:)' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
/// Removes all keys and values from user defaults
/// Use with caution!
/// note:
/// This method only removes keys on the receiver <code>UserDefaults</code> object.
/// System-defined keys will still be present afterwards.
- (void)removeAll SWIFT_DEPRECATED_OBJC("Swift method 'UserDefaults.removeAll()' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
@end





SWIFT_MODULE_NAMESPACE_POP
#pragma clang diagnostic pop
